At = _{ "@" }
Percent = _{ "%" }
Colon = _{ ":" }
Semi = _{ ";" }
Pound = _{ "#" }
Dollar = _{ "$" }
Not = _{ "!" }
Underscore = { "_" }
Dot = _{ "." }
Comma = _{ "," }
DotDotDot = {"..."}
Plus = { "+" }
Minus = { "-" }
/*
Star = { "*" }
Slash = { "/" }
Caret = { "^" }
And = { "&" }
Or = { "|" }
AndAnd = { "&&" }
OrOr = { "||" }
Shl = { "<<" }
Shr = { ">>" }
PlusEq = { "+=" }
MinusEq = { "-=" }
StarEq = { "*=" }
SlashEq = { "/=" }
PercentEq = { "%=" }
CaretEq = { "^=" }
AndEq = { "&=" }
OrEq = { "|=" }
ShlEq = { "<<=" }
ShrEq = { ">>=" }
EqEq = { "==" }
Ne = { "!=" }
Gt = { ">" }
Lt = { "<" }
Ge = { ">=" }
Le = { "<=" }
DotDot = { ".." }
DotDotDot = { "..." }
DotDotEq = { "..=" }
PathSep = _{ "::" }
RArrow = _{ "->" }
FatArrow = { "=>" }
Question = { "?" }
Tilde = { "~" }
*/

SrcFile = _{"source_filename"}
DwTag = _{"DW_TAG_"}
DwAtE = _{ "DW_ATE_"}
Dlag = _{"DIFlag"}
DwLang = _{"DW_LANG_"}
DwCc = _{"DW_CC_"}
CsK = _{"CSK_"}
DwVirtuality = _{"DW_VIRTUALITY_"}
DwMacinfo = _{"DW_MACINFO_"}
DwOp = _{"DW_OP_"}
Target = _{"target"}
Datalayout = _{"datalayout"}
Triple = _{"triple"}
ModuleKey = _{"module"}
Asm = _{"asm"}
Ty = _{"type"}
Any = _{"any"}
ExactMatch = _{"exactmatch"}
Largest = _{"largest"}
Noduplicates = _{"noduplicates"}
Samesize = _{"samesize"}
Com = {"comdat"}
ExternallyInitialized = {"externally_initialized"}
Const = {"constant"}
Glob = {"global"}
Als = {"alias"}
Ifunc = {"ifunc"}
Declare = _{"declare"}
Define = _{"define"}
Gc = {"gc"}
Prefix = {"prefix"}
Prologue = {"prologue"}
Personality = {"personality"}
Attributes = {"attributes"}
Distinct = {"distinct"}
UseLO = {"uselistorder"}
UseLODB = {"uselistorder_bb"}
VoidType = {"void"}
Half = {"half"}
Float = {"float"}
Double = {"double"}
X86Dp80 = {"x86_fp80"}
Fp128 = {"fp128"}
PpcFp128 = {"ppc_fp128"}
MMXType = {"x86_mmx"}
AddrSp = {"addrspace"}
LabelType = { "label"}
TokenType = { "token"}
MetadataType = { "metadata"}
OpaqueType = { "opaque"}
SideEffect = { "sideeffect"}
AlignStack = { "alignstack"}
IntelDialect = { "inteldialect"}
NullConst = { "null"}
NoneConst = { "none"}
ZeroInitializerConst = { "zeroinitializer"}
UndefConst = { "undef"}
BlockAddress = {"blockaddress"}
Inrange = {"inrange"}
InAlloca = {"inalloca"}
SwiftError = {"swifterror"}
//Weak = {"weak"}
Noundef = {"noundef"}

Add = {"add"}
And = {"and"}
Max = {"max"}
Min = {"min"}
Nand = {"nand"}
Or = {"or"}
Sub = {"sub"}
Umax = {"umax"}
Umin = {"umin"}
Xchg = {"xchg"}
Xor = {"xor"}
Musttail = {"musttail"}
Notail = {"notail"}
Tail = {"tail"}
OptCleanup = {"cleanup"}
Default = {"default"}
Hidden = {"hidden"}
Protected = {"protected"}
LocalUnnamedAddr = {"local_unnamed_addr"}
NoLocalUnnamedAddr = {"unnamed_addr"}
InitialExec = {"initialexec"}
LocalDynamic = {"localdynamic"}
LocalExec = {"localexec"}
Inreg = {"inreg"}
Noalias = {"noalias"}
Nonnull = {"nonnull"}
Signext = {"signext"}
Zeroext = {"zeroext"}
DsoLocal = {"dso_local"}
DsoPreemptable = {"dso_preemptable"}
Byval = {"byval"}
Inalloca = {"inalloca"}
Nest = {"nest"}
Nocapture = {"nocapture"}
Readnone = {"readnone"}
Readonly = {"readonly"}
Returned = {"returned"}
Sret = {"sret" ~ "(" ~ Whitespace? ~ Type ~ Whitespace? ~ ")" | "sret"}
Swifterror = {"swifterror"}
Swiftself = {"swiftself"}
Writeonly = {"writeonly"}
Nsw = {"nsw"}
Nuw = {"nuw"}
ExternWeak = {"extern_weak"}
External = {"external"}
Appending = {"appending"}
AvailableExternally = {"available_externally"}
Common = {"common"}
Internal = {"internal"}
Linkonce = {"linkonce"}
linkonceOdr = {"linkonce_odr"}
Private = {"private"}
Weak = {"weak"}
WeakOdr = {"weak_odr"}
Eq = {"eq" | "="}
Ne = {"ne"}
Sge = {"sge"}
Sgt = {"sgt"}
Sle = {"sle"}
Slt = {"slt"}
Uge = {"uge"}
Ugt = {"ugt"}
Ule = {"ule"}
AcqRel = {"acq_rel"}
Acquire = {"acquire"}
Monotonic = {"monotonic"}
Release = {"release"}
SeqCst = {"seq_cst"}
Unordered = {"unordered"}
Cc = {"cc"}
AmdgpuCs = {"amdgpu_cs"}
AmdgpuEs = {"amdgpu_es"}
AmdgpuGs = {"amdgpu_gs"}
AmdgpuHs = {"amdgpu_hs"}
AmdgpuKernel = {"amdgpu_kernel"}
AmdgpuLs = {"amdgpu_ls"}
AmdgpuPs = {"amdgpu_ps"}
AmdgpuVs = {"amdgpu_vs"}
AnyregCc = {"anyregcc"}
ArmAapcsVfpcc = {"arm_aapcs_vfpcc"}
ArmAapcscc = {"arm_aapcscc"}
ArmApcscc = {"arm_apcscc"}
AvrIntrcc = {"avr_intrcc"}
AvrSignalcc = {"avr_signalcc"}
Ccc = {"ccc"}
Coldcc = {"coldcc"}
CxxFastTlscc = {"cxx_fast_tlscc"}
FastCc = {"fastcc"}
GhCcc = {"ghccc"}
HhvmCcc = {"hhvm_ccc"}
HhvmCc = {"hhvmcc"}
IntelOclBicc = {"intel_ocl_bicc"}
Msp430Intrcc = {"msp430_intrcc"}
PreserveAllcc = {"preserve_allcc"}
PreserveMostcc = {"preserve_mostcc"}
PtxDevice = {"ptx_device"}
PtxKernel = {"ptx_kernel"}
SpirFunc = {"spir_func"}
SpirKernel = {"spir_kernel"}
Swiftcc = {"swiftcc"}
WebkitJscc = {"webkit_jscc"}
Win64cc = {"win64cc"}
X8664Sysvcc = {"x86_64_sysvcc"}
X86Fastcallcc = {"x86_fastcallcc"}
X86Intrcc = {"x86_intrcc"}
X86Regcallcc = {"x86_regcallcc"}
X86Stdcallcc = {"x86_stdcallcc"}
X86Thiscallcc = {"x86_thiscallcc"}
X86Vectorcallcc = {"x86_vectorcallcc"}
Dllexport = {"dllexport"}
Dllimport = {"dllimport"}
Exact = {"exact"}
InBounds = {"inbounds"}
False = {"false"}
True = {"true"}
Oeq = {"oeq"}
Oge = {"oge"}
Ogt = {"ogt"}
Ole = {"ole"}
Olt = {"olt"}
One = {"one"}
Ord = {"ord"}
Ueq = {"ueq"}
Ult = {"ult"}
Une = {"une"}
Uno = {"uno"}

Afn = {"afn"}
Arcp = {"arcp"}
Contract = {"contract"}
Fast = {"fast"}
Ninf = {"ninf"}
Nnan = {"nnan"}
Nsz = {"nsz"}
Reassoc = {"reassoc"}
Align = {"align"}
Alignstack = {"alignstack"}


Alwaysinline = {"alwaysinline"}
Argmemonly = {"argmemonly"}
Builtin = {"builtin"}
Cold = {"cold"}
Convergent = {"convergent"}
InaccessiblememOrArgmemonly = {"inaccessiblemem_or_argmemonly"}
Inaccessiblememonly = {"inaccessiblememonly"}
Inlinehint = {"inlinehint"}
Jumptable = {"jumptable"}
Minsize = {"minsize"}
Naked = {"naked"}
Nobuiltin = {"nobuiltin"}
Noduplicate = {"noduplicate"}
Noimplicitfloat = {"noimplicitfloat"}
Noinline = {"noinline"}
Nonlazybind = {"nonlazybind"}
Norecurse = {"norecurse"}
Noredzone = {"noredzone"}
Noreturn = {"noreturn"}
Nounwind = {"nounwind"}
Optnone = {"optnone"}
Optsize = {"optsize"}


ReturnsTwice = {"returns_twice"}
Safestack = {"safestack"}
SanitizeAddress = {"sanitize_address"}
SanitizeHwaddress = {"sanitize_hwaddress"}
SanitizeMemory = {"sanitize_memory"}
SanitizeThread = {"sanitize_thread"}
Speculatable = {"speculatable"}
Ssp = {"ssp"}
Sspreq = {"sspreq"}
Sspstrong = {"sspstrong"}
Strictfp = {"strictfp"}
Uwtable = {"uwtable"}
Uriteonly = {"uriteonly"}
Nneg = {"nneg"}
Disjoint = {"disjoint"}
DeadOnUnwind = {"dead_on_unwind"}
Writable = {"writable"}
Poison = {"poison"}
Immarg = {"immarg"}
Allocalign = {"allocalign"}
Allocptr = {"allocptr"}

Mustprogress = {"mustprogress"}
Nofree = {"nofree"}
Nosync = {"nosync"}
Willreturn = {"willreturn"}
Memory = {"memory" ~ "(" ~ Whitespace? ~ MemoryArgItem? ~ Whitespace? ~ ")"}
Mocallback = {"nocallback"}
Readwrite = {"readwrite"}
Read = {"read"}
Write = {"write"}
Range = {"range" ~ Whitespace? ~ "(" ~ Whitespace? ~ Type ~ Whitespace? ~ IntLit ~ Whitespace? ~ Comma ~ Whitespace? ~ IntConst ~ Whitespace? ~")" }
Allockind = {"allockind" ~ Whitespace? ~ "(" ~ Whitespace? ~ StringLit ~ Whitespace? ~")" }
MemoryArg = {LabelIdent ~ Whitespace? ~ Auth}
MemoryArgs = {MemoryArg ~ Whitespace? ~ (Comma ~ Whitespace? ~ MemoryArg)*}
MemoryArgItem = {
    | MemoryArgs
    | NoneConst
}
Auth = {
    Readwrite
    | Writeonly
    | Readonly
    | Read
    | Write
}